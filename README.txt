Here's an overview of the code's functionality:

The code sets up a Flask application, configures the secret key and session 
settings, and defines a constant TOKEN_INFO to store the session token 
information.

The create_spotify_oauth() function creates a SpotifyOAuth object with the 
required client credentials, redirect URI, and requested scopes.

The /login route initiates the Spotify authentication flow by redirecting the 
user to the Spotify authorization URL generated by the create_spotify_oauth() 
function.

The /redirect route handles the callback from the Spotify authorization process. 
It retrieves the authorization code from the request arguments, exchanges it for 
an access token using the get_access_token() method of the SpotifyOAuth object, 
and stores the token information in the session. Then, it redirects the user to 
the /getTracks route.

The /getTracks route retrieves the token information from the session using the 
get_token() function. If the token is expired, it refreshes the access token 
using the refresh_access_token() method of the SpotifyOAuth object. It then uses 
the access token to create a Spotipy Spotify API client and fetches the recently 
played tracks for the current user. The track items are extracted and returned as 
a string.

The get_token() function checks if token information exists in the session. If 
not, it raises an exception. It also checks if the token is expired and refreshes 
it if necessary using the refresh_access_token() method of the SpotifyOAuth 
object. Finally, it returns the updated token information.

The / route serves as the home page and returns a simple string message.

The Flask application is run if the script is executed directly.

To use the code, follow these steps:
Run the script to start the Flask application.
Access http://127.0.0.1:5000/login in your web browser to initiate the Spotify 
authentication process.
After authenticating and granting the necessary permissions, you will be 
redirected to http://127.0.0.1:5000/getTracks, which will display the recently 
played tracks for the authorized user. 
